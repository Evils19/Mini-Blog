@page "/posts"
@inject BlogDbContext Db
@inject NavigationManager Nav

<PageTitle>Postări - Blog</PageTitle>

<div class="posts-hero">
    <div class="container py-5">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="display-4 fw-bold mb-3">
                    <i class="bi bi-newspaper text-white me-3"></i>
                    Postări
                </h1>
                <p class="lead text-white-50">Descoperă cele mai recente articole și știri</p>
            </div>
            <div class="col-lg-4 text-lg-end">
                <NavLink class="btn btn-light btn-lg shadow-sm" href="/admin/posts/new">
                    <i class="bi bi-plus-circle me-2"></i>
                    Adaugă postare
                </NavLink>
            </div>
        </div>
    </div>
</div>

<div class="container my-5">
    @if (_loading)
    {
    <div class="text-center py-5">
        <div class="spinner-border text-primary mb-3" style="width: 3rem; height: 3rem;" role="status">
            <span class="visually-hidden">Se încarcă...</span>
        </div>
        <p class="text-muted">Se încarcă postările...</p>
    </div>
    }
    else if (_posts.Count == 0)
    {
    <div class="empty-state">
        <div class="text-center py-5">
            <i class="bi bi-inbox display-1 text-muted mb-4"></i>
            <h3 class="mb-3">Nu există postări</h3>
            <p class="text-muted mb-4">Nicio postare nu a fost publicată încă.</p>
            <NavLink class="btn btn-primary" href="/admin/posts/new">
                <i class="bi bi-plus-circle me-2"></i>
                Creează prima postare
            </NavLink>
        </div>
    </div>
    }
    else
    {
    <div class="row g-4">
        @foreach (var p in _posts)
        {
        <div class="col-lg-6 col-xl-4">
            <div class="post-card card h-100 border-0 shadow-sm">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-start mb-3">
                        <div class="post-icon me-3">
                            <i class="bi bi-file-text text-primary"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h5 class="card-title mb-2 fw-bold">@p.Title</h5>
                            <small class="text-muted">
                                <i class="bi bi-calendar3 me-1"></i>
                                @p.CreatedAt.ToLocalTime().ToString("dd MMM yyyy, HH:mm")
                            </small>
                        </div>
                    </div>

                    <div class="post-preview mb-3 flex-grow-1">
                        @{
                        var plainText = System.Text.RegularExpressions.Regex.Replace(p.Content ?? "", "<.*?>", "");
                        var preview = plainText.Length > 150 ? plainText.Substring(0, 150) + "..." : plainText;
                        }
                        <p class="text-muted mb-0">@preview</p>
                    </div>

                    <div class="mt-auto">
                        <a href="/posts/@p.Id" class="btn btn-outline-primary w-100">
                            <i class="bi bi-arrow-right-circle me-2"></i>
                            Citește mai mult
                        </a>
                    </div>
                </div>

                <div class="card-footer bg-transparent border-0 pt-0 pb-3 px-3">
                    <div class="d-flex align-items-center text-muted small">
                        <i class="bi bi-eye me-2"></i>
                        <span>Publicat</span>
                        @if (p.UpdatedAt.HasValue)
                        {
                        <span class="ms-auto">
                                        <i class="bi bi-pencil me-1"></i>
                                        Actualizat
                                    </span>
                        }
                    </div>
                </div>
            </div>
        </div>
        }
    </div>

    <div class="text-center mt-5">
        <p class="text-muted">
            <i class="bi bi-info-circle me-2"></i>
            Afișate @_posts.Count @(_posts.Count == 1 ? "postare" : "postări")
        </p>
    </div>
    }
</div>

<style>
    .posts-hero {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        position: relative;
        overflow: hidden;
    }

    .posts-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        opacity: 0.4;
    }

    .posts-hero .container {
        position: relative;
        z-index: 1;
    }

    .posts-hero h1 {
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .post-card {
        transition: all 0.3s ease;
        cursor: pointer;
        overflow: hidden;
    }

    .post-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 24px rgba(0,0,0,0.15) !important;
    }

    .post-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .post-card:hover::before {
        transform: scaleX(1);
    }

    .post-icon {
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(102, 126, 234, 0.1);
        border-radius: 12px;
        font-size: 1.5rem;
        flex-shrink: 0;
    }

    .post-preview {
        line-height: 1.6;
        font-size: 0.95rem;
    }

    .card-title {
        line-height: 1.4;
        color: #2d3748;
    }

    .empty-state {
        background: linear-gradient(135deg, #f6f9fc 0%, #ffffff 100%);
        border-radius: 16px;
        padding: 2rem;
        margin: 2rem 0;
    }

    .empty-state i {
        opacity: 0.3;
    }

    .btn {
        transition: all 0.3s ease;
        border-radius: 8px;
        font-weight: 500;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }

    .btn-outline-primary {
        border-color: #667eea;
        color: #667eea;
    }

    .btn-outline-primary:hover {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-color: transparent;
        color: white;
    }

    .spinner-border {
        border-width: 0.3rem;
    }

    @@media (max-width: 991.98px) {
        .posts-hero .col-lg-4 {
            margin-top: 1rem;
        }

        .post-card:hover {
            transform: translateY(-4px);
        }
    }

    @@media (max-width: 767.98px) {
        .display-4 {
            font-size: 2rem;
        }

        .posts-hero {
            padding: 2rem 0;
        }
    }
</style>

@code {
private List<Post> _posts = new();
private bool _loading = true;

protected override async Task OnInitializedAsync()
{
try
{
_posts = await Db.Posts
.Where(p => p.IsPublished)
.OrderByDescending(p => p.CreatedAt)
.ToListAsync();
}
catch (Exception ex)
{
// Log error dacă este necesar
_posts = new List<Post>();
}
finally
{
_loading = false;
}
}
}